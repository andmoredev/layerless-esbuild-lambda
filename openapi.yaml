openapi: 3.0.0
info:
  version: 1.0.0
  title: Layerless ESBuild
  description: Demonstrate Lambda function sharing code without Layers
  contact:
    name: Andres Moreno

tags:
  - name: Tool
    description: Tool endpoints

servers:
  - url: https://example.com/api
    description: Example URL

x-amazon-apigateway-request-validators:
  Validate body, query string parameters, and headers:
    validateRequestParameters: true
    validateRequestBody: true

x-amazon-apigateway-gateway-responses:
  BAD_REQUEST_BODY:
    statusCode: 400
    responseTemplates:
      application/json: '{ "message": "$context.error.validationErrorString" }'
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
  UNAUTHORIZED:
    statusCode: 401
    responseTemplates:
      application/json: '{ "message": "Unauthorized" }'
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
  ACCESS_DENIED:
    statusCode: 401
    responseTemplates:
      application/json: '{ "message": "Unauthorized" }'
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"

paths:
  /echo:
    post:
      summary: Echo body
      operationId: echo
      description: |
        Test endpoint that simply echos the body.
      tags:
        - Tool
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/badRequest'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    enum:
                      - Forbidden
        '500':
          $ref: '#/components/responses/unexpectedError'
      x-amazon-apigateway-request-validator: Validate body, query string parameters, and headers
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EchoFunction.Arn}/invocations
        httpMethod: POST
        type: aws_proxy

components:
  responses:
    unexpectedError:
      description: Unexpected error
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                enum:
                  - Something went wrong!

    badRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string