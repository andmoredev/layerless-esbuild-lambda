name: Deploy to Sandbox

on:
  workflow_dispatch:
  pull_request:
    branches:
      main

concurrency:
  group: ${{ github.ref_name }}

permissions:
  id-token: write
  contents: read

env:
  BRANCH_NAME: ${{ github.event_name == 'workflow_dispatch' && github.ref_name || github.event_name == 'pull_request' && github.head_ref }}

jobs:
  predeploy-validations:
    name: Pre-deploy validations
    uses: ./.github/workflows/shared-pre-deploy-validations.yaml

  get-stack-name:
    name: Get Stack Name
    runs-on: ubuntu-latest
    outputs:
      STACK_NAME: ${{ steps.stack-name-step.outputs.STACK_NAME || steps.dependabot-stack-name-step.outputs.STACK_NAME }}
    steps:
      - name: Set the stack name to be used as input
        if: ${{ github.actor != 'dependabot[bot]' }}
        id: stack-name-step
        run: |
          echo "STACK_NAME=layerless-esbuild-lambda-$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "# Stack Name" >> $GITHUB_STEP_SUMMARY
          echo "* layerless-esbuild-lambda-$BRANCH_NAME" >> $GITHUB_STEP_SUMMARY

      - name: Set the formatted dependabot branch name to be used as input
        if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request' }}
        id: dependabot-stack-name-step
        run: |
          prNumber=$(echo "pr-${{ github.event.number }}")
          echo "STACK_NAME=layerless-esbuild-lambda-$prNumber" >> $GITHUB_OUTPUT
          echo "### Stack Name (Dependabot) layerless-esbuild-lambda-$prNumber" >> $GITHUB_STEP_SUMMARY

  deploy:
    name: API Deployment
    needs: [predeploy-validations, get-stack-name]
    uses: ./.github/workflows/shared-deploy-api.yaml
    with:
      ENVIRONMENT: sandbox
      AWS_REGION: us-east-1
      STACK_NAME: layerless-esbuild-lambda
    secrets: inherit

  postdeploy-validations:
    name: Post-deploy validations
    needs: [deploy]
    uses: ./.github/workflows/shared-post-deploy-validations.yaml
    with:
      ENVIRONMENT: sandbox
      BASE_URL: ${{ needs.deploy.outputs.API_BASE_URL }}
    secrets: inherit

  auto-merge-dependabot-update:
    name: Auto Merge Dependabot Update
    needs: [postdeploy-validations]
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2
      - uses: actions/checkout@v4
      - name: Approve a PR if not already approved
        if: ${{ steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor' || steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch' || steps.dependabot-metadata.outputs.package-ecosystem == 'github_actions' }}
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr checkout "$PR_URL" # sets the upstream metadata for `gh pr status`

          if [ "$(gh pr status --json reviewDecision -q .currentBranch.reviewDecision)" != "APPROVED" ]; then
            gh pr review --approve "$PR_URL"
          fi

          gh pr merge --auto --merge "$PR_URL"

